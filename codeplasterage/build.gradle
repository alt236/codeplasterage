plugins {
    id 'java-library'
    id 'maven-publish'
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.kapt)
    // alias(libs.plugins.vanniktech.maven.publish)
}

def project_name = "Code Plasterage"
def github_owner_and_repo = "alt236/codeplasterage"
def group_id = 'dev.alt236'
def artifact_id = 'codeplasterage'
def artifact_version = '1.1-SNAPSHOT'

group group_id
version artifact_version

repositories {
    mavenCentral()
    gradlePluginPortal()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = artifact_id
            groupId = group_id
            version = artifact_version

            from components.java

            pom {
                name = project_name
                description = 'A library to artificially inflate code coverage stats via reflection'
                url = "https://github.com/$github_owner_and_repo"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'alt236'
                        name = 'Alexandros Schillings'
                    }
                }
                scm {
                    url = "https://github.com/$github_owner_and_repo"
                }
            }
        }
    }
    repositories {
        maven {
            name = project_name.replace(" ", "")
            url = uri("https://maven.pkg.github.com/$github_owner_and_repo")
            credentials {
                username = project.findProperty("gpr.user")
                        ?: project.findProperty("GITHUB_ALT236_PUBLISH_USERNAME")
                        ?: System.getenv("GITHUB_ALT236_PUBLISH_USERNAME")
                password = project.findProperty("gpr.key")
                        ?: project.findProperty("GITHUB_ALT236_PUBLISH_KEY")
                        ?: System.getenv("GITHUB_ALT236_PUBLISH_KEY")
            }
        }
    }
}

dependencies {
    implementation libs.commons.lang3
    implementation libs.kotlin.reflect
    implementation libs.guava
    implementation libs.kotlin.reflect
    implementation libs.junit4

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

